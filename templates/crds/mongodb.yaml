apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: {{ printf "%s-mongodbcluster" .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ printf "%s-mongodb" .Chart.Name }}
    {{- if .Values.mongodb.labels }}
    {{- toYaml .Values.mongodb.labels | nindent 4 }}
    {{- end }}
    {{- include "resource.labels.commonLabels" .  | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  namespace: {{ include "namespace.name" . }}
  {{- if or .Values.mongodb.annotations .Values.commonAnnotations }}
  annotations: 
    {{- if .Values.mongodb.annotations }}
    {{- toYaml .Values.mongodb.annotations | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec: 
  version: {{ (split ":" .Values.mongodb.image)._1 | quote }}
  members: {{ .Values.mongodb.replicaCount }}
  type: ReplicaSet
  security:
    authentication:
      modes: ["SCRAM"]
  users:
    - name: {{ .Values.mongodb.auth.rootUser }}
      db: admin
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password
        name: {{ printf "%s-mongo-root-password" .Chart.Name }}
      roles:
        - name: clusterAdmin
          db: admin
        - name: userAdminAnyDatabase
          db: admin
        - name: dbOwner
          db: cte
      scramCredentialsSecretName: {{ printf "%s-mongo-root-scram-cred" .Chart.Name }}
      connectionStringSecretName: {{ printf "%s-mongo-root-connection-string" .Chart.Name }}
    - name: {{ .Values.mongodb.auth.cteAdminUser }}
      db: cte
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password
        name: {{ printf "%s-mongo-cteadmin-password" .Chart.Name }}
      roles:
        - name: dbOwner
          db: cte
      scramCredentialsSecretName: {{ printf "%s-mongo-cteadmin-scram-cred" .Chart.Name }}
      connectionStringSecretName: {{ printf "%s-mongo-cteadmin-connection-string" .Chart.Name }}
  additionalMongodConfig:
    storage.wiredTiger.engineConfig.journalCompressor: zlib
  statefulSet:
    spec:
      template:
        spec:
          securityContext:
            {{- toYaml .Values.mongodb.podSecurityContext | nindent 12 }} 
          initContainers:
            {{- if .Values.mongodb.initContainers.volumePermissionContainer.create }}
            - name: change-dir-permissions-data
              command:
                - sh
              args:
                - -ec
                - |
                  mkdir -p /data
                  chown -R 1001:1001 /data
              image: busybox
              volumeMounts:
              - mountPath: /data
                name: data-volume
              securityContext:
                {{- toYaml .Values.mongodb.initContainerSecurityContext | nindent 16 }}
            - name: change-dir-permissions-logs
              command:
                - sh
              args:
                - -ec
                - |
                  mkdir -p /var/log/mongodb-mms-automation
                  chown -R 1001:1001 /var/log/mongodb-mms-automation
              image: busybox
              volumeMounts:
              - mountPath: /var/log/mongodb-mms-automation
                name: logs-volume
              securityContext:
                  {{- toYaml .Values.mongodb.initContainerSecurityContext | nindent 16 }}
            {{- end }}
          containers:
            - name: mongod
              securityContext:
                {{- toYaml .Values.mongodb.containerSecurityContext | nindent 16 }}
              resources: {{- toYaml .Values.mongodb.resources | nindent 16 }}
            - name: mongodb-agent
              securityContext:
                {{- toYaml .Values.mongodb.containerSecurityContext | nindent 16 }}
      volumeClaimTemplates:
        - kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: data-volume
            labels:
              app.kubernetes.io/name: data-volume
              {{- include "resource.labels.commonLabels" .  | nindent 14 }}
              {{- if .Values.commonLabels }}
              {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 14 }}
              {{- end }}
            {{- if or .Values.mongodb.persistence.annotations .Values.commonAnnotations }}
            annotations: 
              {{- if .Values.mongodb.persistence.annotations }}
              {{- toYaml .Values.mongodb.persistence.annotations | nindent 14 }}
              {{- end }}
              {{- if .Values.commonAnnotations }}
              {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 14 }}
              {{- end }}
            {{- end }}
          spec:
            accessModes:
              - ReadWriteOnce
            storageClassName: {{ .Values.mongodb.persistence.storageClassName }}
            resources:
              requests:
                storage: {{ .Values.mongodb.persistence.size | quote }}
            volumeMode: Filesystem
        - kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: logs-volume
            labels:
              app.kubernetes.io/name: logs-volume
              {{- include "resource.labels.commonLabels" .  | nindent 14 }}
              {{- if .Values.commonLabels }}
              {{- include "tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 14 }}
              {{- end }}
            {{- if or .Values.mongodb.persistence.annotations .Values.commonAnnotations }}
            annotations: 
              {{- if .Values.mongodb.persistence.annotations }}
              {{- toYaml .Values.mongodb.persistence.annotations | nindent 14 }}
              {{- end }}
              {{- if .Values.commonAnnotations }}
              {{- include "tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 14 }}
              {{- end }}
            {{- end }}
          spec:
            accessModes:
              - ReadWriteOnce
            storageClassName: {{ .Values.mongodb.persistence.storageClassName }}
            resources:
              requests:
                storage: {{ .Values.mongodb.persistence.size | quote }}
            volumeMode: Filesystem